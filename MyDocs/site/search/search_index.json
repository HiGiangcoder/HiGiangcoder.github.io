{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gi\u1edbi Thi\u1ec7u","text":""},{"location":"#xin-chao","title":"Xin ch\u00e0o!","text":"<ul> <li>Ch\u00e0o m\u1eebng b\u1ea1n \u0111\u1ebfn v\u1edbi trang t\u00e0i li\u1ec7u c\u1ee7a t\u00f4i! T\u00f4i l\u00e0 m\u1ed9t l\u1eadp tr\u00ecnh vi\u00ean \u0111am m\u00ea v\u1ec1 l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, thu\u1eadt to\u00e1n v\u00e0 ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m. V\u1edbi ni\u1ec1m y\u00eau th\u00edch v\u1ec1 c\u00f4ng ngh\u1ec7 v\u00e0 gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i to\u00e1n ph\u1ee9c t\u1ea1p, t\u00f4i lu\u00f4n t\u00ecm ki\u1ebfm nh\u1eefng th\u1eed th\u00e1ch m\u1edbi \u0111\u1ec3 n\u00e2ng cao k\u1ef9 n\u0103ng v\u00e0 m\u1edf r\u1ed9ng ki\u1ebfn th\u1ee9c c\u1ee7a m\u00ecnh.</li> </ul>"},{"location":"#thong-tin-ban-than","title":"Thong tin ban than","text":"<ul> <li>Sinh vi\u00ean \u0110\u1ea1i h\u1ecdc C\u00f4ng Ngh\u1ec7 Th\u00f4ng Tin (UIT) </li> <li>\u0110am m\u00ea l\u1eadp tr\u00ecnh thi \u0111\u1ea5u, ph\u00e1t tri\u1ec3n web v\u00e0 c\u00f4ng ngh\u1ec7 ph\u1ea7n m\u1ec1m  </li> <li>Th\u00e0nh th\u1ea1o c\u00e1c ng\u00f4n ng\u1eef: C++, Python, JavaScript, HTML/CSS </li> <li>Th\u00edch tham gia c\u00e1c cu\u1ed9c thi l\u1eadp tr\u00ecnh nh\u01b0 Codeforces, AtCoder, LeetCode </li> </ul>"},{"location":"#ket-noi-voi-toi","title":"\ud83c\udf10 K\u1ebft N\u1ed1i V\u1edbi T\u00f4i","text":"<p>\ud83d\udccc Facebook: Nguy\u1ec5n Tr\u01b0\u1eddng Giang \ud83d\udccc GitHub: HiGiangcoder \ud83d\udccc Zalo &amp; \u0110i\u1ec7n tho\u1ea1i: 0385630306  </p>"},{"location":"#tai-lieu-du-an","title":"\ud83d\udcd6 T\u00e0i Li\u1ec7u &amp; D\u1ef1 \u00c1n","text":"<ul> <li>Trang n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef c\u00e1c t\u00e0i li\u1ec7u h\u1ecdc t\u1eadp, h\u01b0\u1edbng d\u1eabn l\u1eadp tr\u00ecnh, c\u0169ng nh\u01b0 c\u00e1c d\u1ef1 \u00e1n c\u00e1 nh\u00e2n m\u00e0 t\u00f4i \u0111ang th\u1ef1c hi\u1ec7n. H\u00e3y theo d\u00f5i \u0111\u1ec3 c\u1eadp nh\u1eadt nh\u1eefng b\u00e0i vi\u1ebft v\u00e0 chia s\u1ebb h\u1eefu \u00edch!  </li> </ul> <ul> <li>C\u1ea3m \u01a1n b\u1ea1n \u0111\u00e3 gh\u00e9 th\u0103m! N\u1ebfu b\u1ea1n c\u00f3 c\u00e2u h\u1ecfi ho\u1eb7c mu\u1ed1n h\u1ee3p t\u00e1c, \u0111\u1eebng ng\u1ea7n ng\u1ea1i li\u00ean h\u1ec7 v\u1edbi t\u00f4i nh\u00e9!</li> </ul>"},{"location":"about/","title":"About","text":""},{"location":"about/#problem-name","title":"Problem name","text":""},{"location":"about/#input","title":"Input:","text":"<ul> <li>a</li> <li>b</li> <li>c</li> </ul>"},{"location":"about/#output","title":"Output:","text":"<ul> <li>d</li> <li>e</li> <li>f</li> </ul>"},{"location":"about/#sample","title":"Sample:","text":"<p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p>"},{"location":"material/","title":"Material","text":""},{"location":"material/#tai-lieu-pdf","title":"Tai lieu PDF:","text":"<p>Contest 3</p> <p>Olympiad</p>"},{"location":"coci0607/contest3/problem1/","title":"Problem 1","text":""},{"location":"coci0607/contest3/problem1/#patuljci","title":"PATULJCI","text":"<p>M\u1ed7i ng\u00e0y, trong khi nh\u1eefng ch\u00fa l\u00f9n \u0111ang b\u1eadn r\u1ed9n trong m\u1ecf, B\u1ea1ch Tuy\u1ebft chu\u1ea9n b\u1ecb b\u1eefa t\u1ed1i cho h\u1ecd, b\u1ea3y c\u00e1i gh\u1ebf, b\u1ea3y c\u00e1i \u0111\u0129a, 7 c\u00e1i n\u0129a v\u00e0 7 c\u00e1i dao cho 7 ch\u00fa l\u00f9n \u0111ang \u0111\u00f3i.</p> <p>M\u1ed9t ng\u00e0y n\u1ecd, 9 ch\u00fa l\u00f9n \u0111\u1ebfn t\u1eeb m\u1ecf thay v\u00ec 7 ch\u00fa l\u00f9n (kh\u00f4ng ai bi\u1ebft nh\u01b0 n\u00e0o v\u00e0 t\u1ea1i sao), m\u1ed7i ng\u01b0\u1eddi h\u1ecd t\u1ef1 x\u01b0ng l\u00e0 m\u1ed9t trong 7 ch\u00fa l\u00f9n c\u1ee7a B\u1ea1ch Tuy\u1ebft.</p> <p>May m\u1eafn thay, m\u1ed7i ch\u00fa l\u00f9n \u0111\u1ed9i m\u1ed9t chi\u1ebfc m\u0169 v\u1edbi s\u1ed1 nguy\u00ean d\u01b0\u01a1ng kh\u00f4ng qu\u00e1 100. B\u1ea1ch Tuy\u1ebft l\u00e0 m\u1ed9t nh\u00e0 to\u00e1n h\u1ecdc n\u1ed5i ti\u1ebfng, do \u0111\u00f3 \u0111\u00e3 nh\u1eadn ra t\u1eeb l\u00e2u r\u1eb1ng t\u1ed5ng c\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 tr\u00ean c\u00e1c m\u0169 c\u1ee7a 7 ch\u00fa l\u00f9n ch\u00ednh x\u00e1c l\u00e0 100.</p> <p>Vi\u1ebft m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh 7 ch\u00fa l\u00f9n ban \u0111\u1ea7u, ch\u1ecdn 7 ch\u00fa l\u00f9n trong s\u1ed1 9 ch\u00fa l\u00f9n \u0111\u00f3 \u0111\u1ec3 t\u1ed5ng l\u00e0 100.</p>"},{"location":"coci0607/contest3/problem1/#input","title":"Input:","text":"<ul> <li>\u0110\u1ea7u v\u00e0o c\u00f3 9 d\u00f2ng. M\u1ed7i d\u00f2ng ch\u1ee9a m\u1ed9t s\u1ed1 nguy\u00ean c\u00f3 gi\u00e1 tr\u1ecb t\u1eeb 1 \u0111\u1ebfn 99. T\u1ea5t c\u1ea3 c\u00e1c s\u1ed1 \u0111\u01b0\u1ee3c cho \u0111\u00f3 l\u00e0 ph\u00e2n bi\u1ec7t.</li> <li>L\u01b0u \u00fd: T\u1eadp d\u1eef li\u1ec7u lu\u00f4n c\u00f3 m\u1ed9t l\u1eddi gi\u1ea3i \u0111\u1ed9c nh\u1ea5t.</li> </ul>"},{"location":"coci0607/contest3/problem1/#output","title":"Output:","text":"<ul> <li>Ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n ph\u1ea3i in ra ch\u00ednh x\u00e1c 7 d\u00f2ng - l\u00e0 s\u1ed1 \u0111\u01b0\u1ee3c ghi tr\u00ean m\u1ed7i m\u0169 c\u1ee7a 7 ch\u00fa l\u00fan ban \u0111\u1ea7u.</li> </ul>"},{"location":"coci0607/contest3/problem1/#example","title":"Example:","text":"<p>Test 1</p> Input <pre><code>7\n8\n10\n13\n15\n19\n20\n23\n25\n</code></pre> Output <pre><code>8\n6\n5\n1\n37\n30\n28\n22\n36\n</code></pre> <p>Test 2</p> Input <pre><code>7\n8\n10\n13\n19\n20\n23\n</code></pre> Output <pre><code>8\n6\n5\n1\n30\n28\n22\n</code></pre>"},{"location":"coci0607/contest3/problem2/","title":"Problem 2","text":""},{"location":"coci0607/contest3/problem2/#npuzzle","title":"NPUZZLE","text":"<p>N-puzzle is a puzzle that goes by many names and has many variants. In this problem we will use the 15-puzzle. It consists of a 4-by-4 grid of sliding squares where one square is missing. The squares are labeled with uppercase letters 'A' through 'O', with the desired layout as follows:</p> <p></p> <p>It  can  be  useful  (for  example,  when  solving  the  puzzle  using  a  computer)  to  define  the  \"scatter\"  of  a puzzle  as  the  sum  of  distances  between  each  square's  current  position  and  its  position  in  the  desired layout. The distance between two squares is their Manhattan distance (the absolute value of the sum of differences between the two rows and the two columns). </p> <p>Write a program that calculates the scatter of the given puzzle. </p>"},{"location":"coci0607/contest3/problem2/#input","title":"Input:","text":"<p>Four lines of input contain four characters each, representing the state of the puzzle. </p>"},{"location":"coci0607/contest3/problem2/#output","title":"Output:","text":"<p>Test 1</p> Input <pre><code>ABCD\nEFGH\nIJKL\nM.NO\n</code></pre> Output <pre><code>2\n</code></pre> <p>Test 2</p> Input <pre><code>.BCD\nEAGH\nIJFL\nMNOK\n</code></pre> Output <pre><code>6\n</code></pre>"},{"location":"coci0607/contest3/problem3/","title":"Problem 3","text":""},{"location":"coci0607/contest3/problem3/#trojke","title":"TROJKE","text":"<p>Mirko and Slavko are playing a new game, \"Trojke\" (Triplets). First they use a chalk to draw an N-by-N square grid on the road. Then they write letters into some of the squares. No letter is written more than once in the grid. </p> <p>The  game  consists  of  trying  to  find  three  letters  on  a  line  as  fast  as  possible.  Three  letters  are  considered  to  be  on  the  same  line  if  there  is  a  line  going  through  the  centre  of  each  of  the  three  squares. </p> <p>After a while it gets harder to find new triplets. Mirko  and  Slavko  need  a  program  that  counts  all  the  triplets, so that they know if the game is over or they need to search further. </p>"},{"location":"coci0607/contest3/problem3/#input","title":"Input:","text":"<p>The first line contains an integer N (3 \u2264 N \u2264 100), the dimension of the grid. </p> <p>Each  of  the  N  following  lines  contains  N  characters  describing  the  grid  \u2013  uppercase  letters  and  the character '.', which marks an empty square.</p>"},{"location":"coci0607/contest3/problem3/#output","title":"Output:","text":"<p>Output the number of triplets on a single line</p>"},{"location":"coci0607/contest3/problem3/#example","title":"Example:","text":"<p>Test 1</p> Input <pre><code>4\n...D\n..C.\n.B..\nA...\n</code></pre> Output <pre><code>4\n</code></pre> <p>Test 2</p> Input <pre><code>5\n..T..\nA....\n.FE.R\n....X\nS....\n</code></pre> Output <pre><code>3\n</code></pre> <p>Test 3</p> Input <pre><code>10\n....AB....\n..C....D..\n.E......F.\n...G..H...\nI........J\nK........L\n...M..N...\n.O......P.\n..Q....R..\n....ST....\n</code></pre> Output <pre><code>0\n</code></pre>"},{"location":"coci0607/contest3/problem4/","title":"Problem 4","text":""},{"location":"coci0607/contest3/problem4/#tenkici","title":"TENKICI","text":"<p>Mirko  found  a  collection  of  N  toy  tanks  dating  back  to  the  Second  World  War  on  his  grandfather's attic. He promptly called his friend Slavko to play with him. They made a battlefield \u2013 a wooden board consisting of squares in N rows and N columns.</p> <p>Each tank can be moved to one of the four neighbouring squares in a single move. A tank can shoot at any square in the same row and column. The tank is said to be guarding the row and column it is in. </p> <p>Additionally, no two tanks can be in the same square at any time. </p> <p>After  many  hours  of  play  and  two  previous  attempts, Mirko's mom yelled at them to come down for lunch  again,  and  they  decided  to  rearrange  the  tanks  so  that  each  tank  guards  a  different row and column (meaning also that each row and column contains only one tank).</p> <p>However, they want to do this using the minimum number of moves. </p> <p>Write a program that finds the minimum number of moves required to rearrange the tanks so that each row and each column contains a single tank, and one such shortest sequence of moves. </p>"},{"location":"coci0607/contest3/problem4/#input","title":"Input:","text":"<p>The first line of input contains the integer N (5 \u2264 N \u2264 500). Each of the following N lines contains two integers R and C (1 \u2264 R, S \u2264 N), the row and column of a  single tank at the moment of mom's call. No two tanks are on the same square. Rows and columns are marked 1 through N, top-down and left-to-right. </p>"},{"location":"coci0607/contest3/problem4/#output","title":"Output:","text":"<p>Output the minimum number of moves (call this number K) on the first line. Each  of  the  next  K  lines  should  contain  the  tank  being  moved  and  the  direction  it  is  moved  in, separated by a single space. Tanks are numbered 1 through N, in the order in which they are given in the input. The direction can be one of four uppercase letters: 'L' for left, 'R' for right, 'U' for up and 'D' for down.  Note: The sequence need not be unique.  Scoring  If  both  the  number  K  and  the  sequence  of  moves  are  correct,  your  program  will  score  full  points  on the test case. If  your  program  outputs  the  correct  number  K  and  does  not  output  the  sequence  of  moves,  or  the sequence of moves is incorrect, you will get 60% of the points for that test case.</p>"},{"location":"coci0607/contest3/problem4/#example","title":"Example:","text":"<p>Test 1</p> Input <pre><code>5 \n1 1 \n1 2 \n1 3 \n1 4 \n1 5\n</code></pre> Output <pre><code>10 \n1 D \n2 D \n3 D \n4 D \n1 D \n2 D \n3 D \n1 D \n2 D \n1 D\n</code></pre> <p>Test 2</p> Input <pre><code>5 \n2 3 \n3 2 \n3 3 \n3 4 \n4 3\n</code></pre> Output <pre><code>8 \n1 R \n1 R \n2 U \n2 U \n4 D \n4 D \n5 L \n5 L\n</code></pre> <p>Test 3</p> Input <pre><code>6 \n1 1 \n1 2 \n2 1 \n5 6 \n6 5 \n6 6\n</code></pre> Output <pre><code>8 \n2 R \n2 D \n3 D \n3 R \n4 U \n4 L \n5 L \n5 U\n</code></pre>"},{"location":"coci0607/contest3/problem5/","title":"Problem 5","text":""},{"location":"coci0607/contest3/problem5/#bicikli","title":"BICIKLI","text":"<p>A  bicycle  race  is  being  organized  in  a  land  far,  far  away.  There  are  N  town  in  the  land,  numbered  1 through N. There are also M one-way roads between the towns. The race will start in town 1 and end  in town 2. How many different ways can the route be set? Two routes are considered different if they do not use  the exact same roads. </p>"},{"location":"coci0607/contest3/problem5/#input","title":"Input:","text":"<p>The first line of input contains two integers N and M (1 \u2264 N \u2264 10 000, 1 \u2264 M \u2264 100 000), the number  of towns and roads. Each of the next M lines contains two different integers A and B, representing a road between towns A  and B. Towns may be connected by more than one road. </p>"},{"location":"coci0607/contest3/problem5/#output","title":"Output:","text":"<p>Output the number of distinct routes that can be set on a single line. If that number has more than nine  digits, output only the last nine digits of the number. If there are infinitely many routes, output \"inf\".</p>"},{"location":"coci0607/contest3/problem5/#sample","title":"Sample:","text":"<p>Test 1</p> Input <pre><code>6 7 \n1 3 \n1 4 \n3 2 \n4 2 \n5 6 \n6 5 \n3 4\n</code></pre> Output <pre><code>3\n</code></pre> <p>Test 2</p> Input <pre><code>6 8 \n1 3 \n1 4 \n3 2 \n4 2 \n5 6 \n6 5 \n3 4 \n4 3 \n</code></pre> Output <pre><code>inf\n</code></pre> <p>Test 3</p> Input <pre><code>31 60 \n1 3 \n1 3 \n3 4 \n3 4 \n4 5 \n4 5 \n5 6 \n5 6 \n6 7 \n6 7 \n... \n... \n... \n28 29 \n28 29 \n29 30 \n29 30 \n30 31 \n30 31 \n31 2 \n31 2\n</code></pre> Output <pre><code>073741824\n</code></pre>"},{"location":"coci0607/contest3/problem6/","title":"Problem 6","text":""},{"location":"coci0607/contest3/problem6/#lista","title":"LISTA","text":"<p>Mirko received a birthday present from his aunt in the US \u2013 a brand-new doubly-linked list (an example  of which is shown in the figure below). The list contains N nodes numbered 1 through N. Two types  of moves can be done on the list: A)  Move node X in front of node Y. B)  Move node X after node Y.  </p> <p></p> <p>An example of a list with 6 nodes. </p> <p></p> <p>The list after the move \"A 1 4\". </p> <p></p> <p>The list after another move, \"B 3 5\". </p> <p>Mirko played with his new toy for hours, writing down each move on a piece of paper so that he can  reconstruct the list's initial state (nodes 1 through N in order from left to right). When  he  decided  to  reconstruct  the  list,  Mirko  was  astonished  to  find  that  there  is  no  easy  way  to invert the moves and restore the list's initial state. Mirko cannot know where node X was prior to each  move, only where it ended up. Seeing how Mirko is still recovering from the shock, write a program that finds a minimal sequence of  moves that restored the list's initial state from Mirko's logs.</p>"},{"location":"coci0607/contest3/problem6/#input","title":"Input","text":"<p>The first line of input contains two integers N and K (2 \u2264 N \u2264 500 000, 0 \u2264 M \u2264 100 000), the number  of nodes and the number of moves made by Mirko. Each of the next M rows contains a description of a single move made by Mirko \u2013 the type of move  ('A' or 'B') and two integers X and Y. </p>"},{"location":"coci0607/contest3/problem6/#output","title":"Output","text":"<p>Output the minimum number of moves (call this number K) on the first line. Each  of  the  next  K  lines  should  contain  a  descriptio n   o f   a   s i n g l e   m o v e   i n   t h e   s a m e   f o r m a t   a s   i n   t h e  input.  Note: The sequence need not be unique.</p>"},{"location":"coci0607/contest3/problem6/#scoring","title":"Scoring","text":"<p>If  both  the  number  K  and  the  sequence  of  moves  are  correct,  your  program  will  score  full  points  on the test case. If  your  program  outputs  the  correct  number  K  and  does  not  output  the  sequence  of  moves,  or  the sequence of moves is incorrect, you will get 60% of the points for that test case.</p> <p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p> <p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p> <p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p>"},{"location":"coci0607/olympiad/problem1/","title":"Problem 1","text":""},{"location":"coci0607/olympiad/problem1/#patrik","title":"PATRIK","text":""},{"location":"coci0607/olympiad/problem1/#input","title":"Input:","text":"<ul> <li>a</li> <li>b</li> <li>c</li> </ul>"},{"location":"coci0607/olympiad/problem1/#output","title":"Output:","text":"<ul> <li>d</li> <li>e</li> <li>f</li> </ul>"},{"location":"coci0607/olympiad/problem1/#sample","title":"Sample:","text":"<p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p>"},{"location":"coci0607/olympiad/problem2/","title":"Problem 2","text":""},{"location":"coci0607/olympiad/problem2/#policija","title":"POLICIJA","text":""},{"location":"coci0607/olympiad/problem2/#input","title":"Input:","text":"<ul> <li>a</li> <li>b</li> <li>c</li> </ul>"},{"location":"coci0607/olympiad/problem2/#output","title":"Output:","text":"<ul> <li>d</li> <li>e</li> <li>f</li> </ul>"},{"location":"coci0607/olympiad/problem2/#sample","title":"Sample:","text":"<p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p>"},{"location":"coci0607/olympiad/problem3/","title":"Problem 3","text":""},{"location":"coci0607/olympiad/problem3/#sabor","title":"SABOR","text":""},{"location":"coci0607/olympiad/problem3/#input","title":"Input:","text":"<ul> <li>a</li> <li>b</li> <li>c</li> </ul>"},{"location":"coci0607/olympiad/problem3/#output","title":"Output:","text":"<ul> <li>d</li> <li>e</li> <li>f</li> </ul>"},{"location":"coci0607/olympiad/problem3/#sample","title":"Sample:","text":"<p>Test 1</p> Input <pre><code>abc\n</code></pre> Output <pre><code>abc\n</code></pre> Note <p>abc</p>"}]}